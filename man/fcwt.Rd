% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fcwt.R
\name{fcwt}
\alias{fcwt}
\title{Performs a fast continuous wavelet transform}
\usage{
fcwt(
  signal,
  sample_freq,
  freq_begin,
  freq_end,
  n_freqs,
  sigma,
  abs = FALSE,
  nthreads = 8L
)
}
\arguments{
\item{signal}{Real-valued time series. The time step gaps are assumed to be uniform.}

\item{sample_freq}{Sampling rate of input time series in Hz.
(to establish a connection to physical units.)
The sampling rate also defines the highest possible
frequency resolution of the CWT: half of the sampling rate.}

\item{freq_begin}{Sets the minimal frequency (`> 0`!) in Hz that should be
contained in the output.}

\item{freq_end}{Sets the maximal frequency (`> freq_begin`!) in Hz that should be
contained in the output.}

\item{n_freqs}{Number of frequency bins generated by the CWT. The frequencies
are linearly distributed. Computation time increases
when raising the number of frequency bins.}

\item{sigma}{Sets a parameter modifying the wavelet length. Adjusts
the time/frequency uncertainty balance. Defaults to 1.
Larger (lower) value of sigma corresponds to a better
(worse) frequency resolution and a worse (better) time
resolution.}

\item{abs}{Should the output return the only the absolute values of the transform?
`TRUE` / `FALSE`.}

\item{nthreads}{Number of threads used by the computation, if applicable.}
}
\value{
A numeric matrix with `dim = c(length(signal), n_freqs)`. The matrix is
 real-valued if `abs = TRUE`, otherwise complex-valued.
}
\description{
This function call is a thin wrapper for the fcwt API.
}
\examples{
ts_sin_440 <- sin((1:44100) * 2 * pi * 440 / 44100)

fcwt(
  ts_sin_440,
  sample_freq = 44100,
  freq_begin = 50,
  freq_end = 1000,
  n_freqs = 10,
  sigma = 5
)


}
